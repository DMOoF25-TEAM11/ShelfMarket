<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- ===== PALETTE (Colors are immutable, resolved once through StaticResource) ===== -->
    <Color x:Key="Color.Primary">#FF6B00</Color>
    <Color x:Key="Color.OnPrimary">#FFFFFFFF</Color>
    <Color x:Key="Color.Surface">#0F172A</Color>
    <Color x:Key="Color.SurfaceAlt">#111827</Color>
    <Color x:Key="Color.Card">#1F2937</Color>
    <Color x:Key="Color.Accent">#22C55E</Color>
    <Color x:Key="Color.Text">#E5E7EB</Color>
    <Color x:Key="Color.TextDim">#9CA3AF</Color>
    <Color x:Key="Color.Border">#374151</Color>

    <!-- ===== BRUSHES (Single instances; StaticResource prevents re-evaluation) ===== -->
    <SolidColorBrush x:Key="Brush.Primary" Color="{StaticResource Color.Primary}"/>
    <SolidColorBrush x:Key="Brush.OnPrimary" Color="{StaticResource Color.OnPrimary}"/>
    <SolidColorBrush x:Key="Brush.Surface" Color="{StaticResource Color.Surface}"/>
    <SolidColorBrush x:Key="Brush.SurfaceAlt" Color="{StaticResource Color.SurfaceAlt}"/>
    <SolidColorBrush x:Key="Brush.Card" Color="{StaticResource Color.Card}"/>
    <SolidColorBrush x:Key="Brush.Accent" Color="{StaticResource Color.Accent}"/>
    <SolidColorBrush x:Key="Brush.Text" Color="{StaticResource Color.Text}"/>
    <SolidColorBrush x:Key="Brush.TextDim" Color="{StaticResource Color.TextDim}"/>
    <SolidColorBrush x:Key="Brush.Border" Color="{StaticResource Color.Border}"/>
    <SolidColorBrush x:Key="Brush.Transparent" Color="Transparent"/>

    <!-- ===== BASE TEXT STYLES ===== -->
    <Style x:Key="Text.H1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
    </Style>

    <Style x:Key="Text.H2" TargetType="TextBlock" BasedOn="{StaticResource Text.H1}">
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="Text.Body" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="Text.BodyStrong" TargetType="TextBlock" BasedOn="{StaticResource Text.Body}">
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <!-- Global TextBlock fallback -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- ===== BASE CONTROL STYLES ===== -->
    <Style TargetType="UserControl">
        <Setter Property="Background" Value="{StaticResource Brush.SurfaceAlt}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
    </Style>

    <!-- Reusable cornered card -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="ListBorder" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ===== INPUTS ===== -->
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="#0B1220"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="CaretBrush" Value="{StaticResource Brush.Text}"/>
    </Style>

    <!-- ComboBox consistent look -->
    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="#0B1220"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Bg"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                        <ToggleButton x:Name="DropDownToggle"
                                      Grid.ZIndex="1"
                                      Focusable="False"
                                      Background="{StaticResource Brush.Transparent}"
                                      BorderThickness="0"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Stretch"
                                      Width="28"
                                      Padding="0"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <Path Data="M 0 0 L 4 4 L 8 0"
                                  Stretch="Uniform"
                                  Width="10" Height="6"
                                  StrokeThickness="2"
                                  Stroke="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ToggleButton>
                        <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Border Background="{StaticResource Brush.SurfaceAlt}"
                                    BorderBrush="{StaticResource Brush.Border}"
                                    BorderThickness="1"
                                    CornerRadius="6" Padding="4"
                                    MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer CanContentScroll="True">
                                    <StackPanel IsItemsHost="True"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bg" Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Bg" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Padding" Value="8,6"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Border}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===== BUTTONS ===== -->
    <!-- Base visual template extracted to avoid duplication -->
    <ControlTemplate x:Key="Button.RoundedTemplate" TargetType="Button">
        <Border x:Name="Bg"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="8">
            <ContentPresenter Margin="4"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bg" Property="Background" Value="#FF7C21"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Bg" Property="Background" Value="#E65F00"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Button.Base" TargetType="Button">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
        <Setter Property="Background" Value="{StaticResource Brush.Primary}"/>
        <Setter Property="Template" Value="{StaticResource Button.RoundedTemplate}"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- Default Button style -->
    <Style TargetType="Button" BasedOn="{StaticResource Button.Base}"/>

    <Style x:Key="Button.Primary" TargetType="Button" BasedOn="{StaticResource Button.Base}"/>

    <Style x:Key="Button.Secondary" TargetType="Button" BasedOn="{StaticResource Button.Base}">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="{StaticResource Brush.SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Bg"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                        <ContentPresenter Margin="4"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#151E32"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#0F172A"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Popup button (inherits visuals) -->
    <Style x:Key="Popup.Button" TargetType="Button" BasedOn="{StaticResource Button.Primary}">
        <Setter Property="Margin" Value="0,20,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Padding" Value="16,10"/>
    </Style>

    <!-- Shelf buttons -->
    <ControlTemplate x:Key="Stand.ButtonTemplate" TargetType="Button">
        <Border x:Name="bd"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="6">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="bd" Property="Background" Value="#0B1220"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Stand.Horizontal" TargetType="Button">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource Stand.ButtonTemplate}"/>
    </Style>

    <Style x:Key="Stand.Vertical" TargetType="Button" BasedOn="{StaticResource Stand.Horizontal}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="45"/>
    </Style>

    <!-- Radio as pill -->
    <Style x:Key="Option.Radio" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="bd"
                            Background="{StaticResource Brush.Transparent}"
                            BorderBrush="{StaticResource Brush.Border}"
                            BorderThickness="1.5"
                            CornerRadius="10"
                            Padding="12,8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===== NAVIGATION LISTBOX (kept separate variant) ===== -->
    <ControlTemplate x:Key="Nav.ListBoxItemTemplate" TargetType="ListBoxItem">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="SelBar" Grid.Column="0" Background="{StaticResource Brush.Transparent}" CornerRadius="2"/>
            <Border Grid.Column="1" Background="{StaticResource Brush.Transparent}" CornerRadius="8" Padding="12,10">
                <ContentPresenter Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="SelBar" Property="Background" Value="{StaticResource Brush.Border}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="SelBar" Property="Background" Value="{StaticResource Brush.Primary}"/>
                <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Nav.ListBoxItem" TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template" Value="{StaticResource Nav.ListBoxItemTemplate}"/>
    </Style>

    <Style x:Key="Nav.ListBox" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource Brush.SurfaceAlt}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource Nav.ListBoxItem}"/>
    </Style>

    <!-- ===== GENERIC LISTBOX / LISTVIEW ===== -->
    <ControlTemplate x:Key="ListBoxItem.StandardTemplate" TargetType="ListBoxItem">
        <Border x:Name="Bd"
                Background="{TemplateBinding Background}"
                CornerRadius="6"
                BorderBrush="{StaticResource Brush.Transparent}"
                BorderThickness="1"
                SnapsToDevicePixels="True">
            <ContentPresenter Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Border}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Primary}"/>
                <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                    <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Padding" Value="8,6"/>
                    <Setter Property="Template" Value="{StaticResource ListBoxItem.StandardTemplate}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                    <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Padding" Value="8,6"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border x:Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="6"
                                        BorderBrush="{StaticResource Brush.Transparent}"
                                        BorderThickness="1"
                                        SnapsToDevicePixels="True">
                                    <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                          Columns="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=View.Columns}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter TargetName="Bd" Property="Background" Value="#121A2F"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Primary}"/>
                                        <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.6"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="GridView.ColumnHeaderContainerStyle">
            <Setter.Value>
                <Style TargetType="GridViewColumnHeader">
                    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
                    <Setter Property="Background" Value="{StaticResource Brush.SurfaceAlt}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="Padding" Value="8,6"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#151E32"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===== DATAGRID ===== -->
    <SolidColorBrush x:Key="DataGrid.HorizontalGridLinesBrush" Color="#1E293B"/>
    <SolidColorBrush x:Key="DataGrid.VerticalGridLinesBrush" Color="#1E293B"/>

    <Style x:Key="DataGrid.ColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource Brush.SurfaceAlt}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="SeparatorVisibility" Value="Collapsed"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#151E32"/>
                        </Trigger>
                        <!-- Sort Asc / Desc share identical visuals -->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#1C273B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGrid.RowStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Transparent}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            CornerRadius="4"
                            Margin="0,1,0,0">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1"
                                                      Grid.Row="1"
                                                      Visibility="{TemplateBinding DetailsVisibility}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Border}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGrid.CellStyle" TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border x:Name="CellBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                  <!-- IMPORTANT: ContentPresenter MUST bind Content / ContentTemplate -->
                  <ContentPresenter
                      Content="{TemplateBinding Content}"
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                      RecognizesAccessKey="True"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter TargetName="CellBorder" Property="Background" Value="#FF7C21"/>
                    <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                  </Trigger>
                  <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter TargetName="CellBorder" Property="Background" Value="#E65F00"/>
                    <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
                  </Trigger>
                  <Trigger Property="IsReadOnly" Value="True">
                    <Setter TargetName="CellBorder" Property="Opacity" Value="0.85"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{StaticResource Brush.Card}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="AlternatingRowBackground" Value="#121A2F"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGrid.HorizontalGridLinesBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGrid.VerticalGridLinesBrush}"/>
        <Setter Property="HeadersVisibility" Value="All"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="RowStyle" Value="{StaticResource DataGrid.RowStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource DataGrid.CellStyle}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGrid.ColumnHeaderStyle}"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader"/>
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
        <Setter Property="Margin" Value="0,8,0,8"/>
    </Style>

    <!-- ===== POPUPS / STATUS / WINDOW ===== -->
    <Style x:Key="Popup.Window" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="MinWidth" Value="400"/>
        <Setter Property="MinHeight" Value="300"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.3" ShadowDepth="8" BlurRadius="20"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Popup.Title" TargetType="TextBlock" BasedOn="{StaticResource Text.H2}">
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="Text.Error" TargetType="TextBlock" BasedOn="{StaticResource Text.Body}">
        <Setter Property="Foreground" Value="#FF6B6B"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
    </Style>

    <Style x:Key="Text.Label" TargetType="TextBlock" BasedOn="{StaticResource Text.Body}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Margin" Value="0,0,0,2"/>
    </Style>

    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="{StaticResource Color.Surface}"/>

    <Style x:Key="App.Window" TargetType="Window">
        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
    </Style>

    <Style x:Key="Overlay.Grid" TargetType="Grid">
        <Setter Property="Background" Value="#80000000"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Grid.RowSpan" Value="2"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
    </Style>

    <Style x:Key="StatusBar.Container" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="Padding" Value="12,8"/>
    </Style>

    <Style x:Key="Status.Indicator" TargetType="Ellipse">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Fill" Value="#B91C1C"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True">
                <Setter Property="Fill" Value="{StaticResource Brush.Accent}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Status.Text" TargetType="TextBlock" BasedOn="{StaticResource Text.Body}">
        <Setter Property="Text" Value="Offline"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.TextDim}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="True">
                <Setter Property="Text" Value="Online"/>
                <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ===== MENU ===== -->
    <Style TargetType="Menu">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="{StaticResource Brush.SurfaceAlt}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <ControlTemplate x:Key="MenuItem.Template" TargetType="MenuItem">
        <Grid>
            <Border x:Name="HeaderBg" Background="{TemplateBinding Background}">
                <ContentPresenter Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"
                                  ContentSource="Header"
                                  TextElement.Foreground="{TemplateBinding Foreground}"/>
            </Border>
            <Popup x:Name="PART_Popup"
                   Placement="Bottom"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{TemplateBinding IsSubmenuOpen}">
                <Border Background="{StaticResource Brush.SurfaceAlt}"
                        BorderBrush="{StaticResource Brush.Border}"
                        BorderThickness="1"
                        CornerRadius="6"
                        Padding="4"
                        SnapsToDevicePixels="True">
                    <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </ScrollViewer>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="HeaderBg" Property="Background" Value="{StaticResource Brush.Border}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="HeaderBg" Property="Background" Value="{StaticResource Brush.Primary}"/>
                <Setter Property="Foreground" Value="{StaticResource Brush.OnPrimary}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter TargetName="PART_Popup" Property="Placement" Value="Bottom"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter TargetName="PART_Popup" Property="Placement" Value="Right"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
                <Setter Property="Cursor" Value="Arrow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="MenuItem">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource MenuItem.Template}"/>
    </Style>

</ResourceDictionary>
